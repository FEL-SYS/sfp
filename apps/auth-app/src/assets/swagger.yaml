components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        User:
            properties:
                id:
                    type: number
                    format: double
                username:
                    type: string
            required:
                - id
                - username
            type: object
            additionalProperties: false
        UserDto:
            properties:
                id:
                    type: number
                    format: double
                User:
                    type: string
                    example: 'todo need change'
            required:
                - id
                - User
            type: object
            additionalProperties: false
        PaginationResult_User_:
            properties:
                total:
                    type: number
                    format: double
                perPage:
                    type: number
                    format: double
                data:
                    items:
                        $ref: '#/components/schemas/User'
                    type: array
            required:
                - total
                - perPage
                - data
            type: object
            additionalProperties: false
    securitySchemes:
        bearer_auth:
            type: http
            scheme: bearer
            bearerFormat: Bearer
info:
    title: ts-next
    version: 0.0.0
    license:
        name: MIT
    contact: {}
openapi: 3.0.0
paths:
    /user:
        post:
            operationId: Create
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            tags:
                - User
            security:
                - bearer_auth: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/UserDto'
                                - {}
        put:
            operationId: Update
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            tags:
                - User
            security:
                - bearer_auth: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/UserDto'
                                - {}
    '/user/{perPage}/{lastId}/{sort}':
        get:
            operationId: List
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PaginationResult_User_'
            tags:
                - User
            security:
                - bearer_auth: []
            parameters:
                - in: path
                  name: perPage
                  required: true
                  schema:
                      format: double
                      type: number
                - in: path
                  name: lastId
                  required: true
                  schema:
                      format: double
                      type: number
                - in: path
                  name: sort
                  required: true
                  schema:
                      format: double
                      type: number
                - in: query
                  name: search
                  required: false
                  schema:
                      type: string
    '/user/{id}':
        get:
            operationId: View
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            tags:
                - User
            security:
                - bearer_auth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      format: double
                      type: number
        delete:
            operationId: Delete
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: number
                                format: double
            tags:
                - User
            security:
                - bearer_auth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      format: double
                      type: number
servers:
    - url: /
