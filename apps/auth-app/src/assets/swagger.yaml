components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        User:
            properties:
                id:
                    type: number
                    format: double
                username:
                    type: string
                email:
                    type: string
                type:
                    type: string
                active:
                    type: boolean
                password:
                    type: string
            required:
                - id
                - username
                - email
                - type
                - active
                - password
            type: object
            additionalProperties: false
        UserRegisterDto:
            properties:
                username:
                    type: string
                    example: username
                email:
                    type: string
                    example: email@gmail.cm
                type:
                    type: string
                    example: administrator
                password:
                    type: string
                    example: password
            required:
                - username
                - email
                - type
                - password
            type: object
            additionalProperties: false
        UserViewDto:
            properties:
                username:
                    type: string
                    example: username
                email:
                    type: string
                    example: email@gmail.cm
                type:
                    type: string
                    example: administrator
                password:
                    type: string
                    example: password
                accessToken:
                    type: string
                    example: access_token
            required:
                - username
                - email
                - type
                - password
                - accessToken
            type: object
            additionalProperties: false
        Error:
            properties:
                name:
                    type: string
                message:
                    type: string
                stack:
                    type: string
            required:
                - name
                - message
            type: object
            additionalProperties: false
        UserLoginDto:
            properties:
                username:
                    type: string
                    example: username
                password:
                    type: string
                    example: password
            required:
                - username
                - password
            type: object
            additionalProperties: false
    securitySchemes:
        bearer_auth:
            type: http
            scheme: bearer
            bearerFormat: Bearer
info:
    title: ts-next
    version: 0.0.0
    license:
        name: MIT
    contact: {}
openapi: 3.0.0
paths:
    /auth/register:
        post:
            operationId: Register
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            tags:
                - User
            security:
                - api_key: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/UserRegisterDto'
                                - {}
    /auth/login:
        post:
            operationId: Login
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {
                                          $ref: '#/components/schemas/UserViewDto',
                                      }
                                    - { $ref: '#/components/schemas/Error' }
            tags:
                - User
            security:
                - api_key: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/UserLoginDto'
                                - {}
    /auth/me:
        get:
            operationId: Me
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            tags:
                - User
            security:
                - bearer_auth: []
            parameters: []
servers:
    - url: /
